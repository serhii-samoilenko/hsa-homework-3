services:

  geo-service:
    image: services/geo-service
    build:
      context: .
      dockerfile: services/docker/fat.Dockerfile
      args:
        MODULE_NAME: geo-service
    environment:
      - SPRING_DATA_ELASTICSEARCH_CLUSTER_NODES=elasticsearch:9200
      - APP_WEATHER_SERVICE_URL=http://weather-service:8082
      - MANAGEMENT_STATSD_METRICS_EXPORT_HOST=telegraf
      - LOG_LEVEL=INFO
    ports:
      - '8081:8081'
    depends_on:
      - elasticsearch
      - weather-service

  weather-service:
    image: services/weather-service
    build:
      context: .
      dockerfile: services/docker/fat.Dockerfile
      args:
        MODULE_NAME: weather-service
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongodb:27017/weather
      - MANAGEMENT_STATSD_METRICS_EXPORT_HOST=telegraf
      - LOG_LEVEL=INFO
    ports:
      - '8082:8082'
    depends_on:
      - mongodb

  mongodb:
    image: bitnami/mongodb
    container_name: mongodb
    restart: always
    volumes:
      - ./data/mongodb:/bitnami/mongodb
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    ports:
      - '27017:27017'

  elasticsearch:
    image: elasticsearch:7.17.9
    container_name: elasticsearch
    restart: always
    volumes:
      - ./data/elasticsearch:/bitnami/elasticsearch/data
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - ES_JAVA_OPTS=-Xmx1024m -Xms256m
    ports:
      - '9200:9200'
      - '9300:9300'

  socket-proxy:
    image: tecnativa/docker-socket-proxy
    container_name: socket-proxy
    restart: always
    privileged: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '127.0.0.1:2375:2375'
    environment:
      - LOG_LEVEL=info # debug,info,notice,warning,err,crit,alert,emerg
      - CONTAINERS=1
      - INFO=1

  telegraf:
    image: telegraf:alpine
    container_name: telegraf
    restart: always
    volumes:
      - ./config/telegraf/telegraf.conf:/etc/telegraf/telegraf.conf:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - '8125:8125/udp'
    depends_on:
      - socket-proxy
      - influxdb

  influxdb:
    image: influxdb:1.8-alpine
    container_name: influxdb
    restart: always
    volumes:
      - ./data/influxdb:/var/lib/influxdb
    environment:
      - INFLUXDB_DB=telegraf
      - INFLUXDB_ADMIN_USER=admin
      - INFLUXDB_ADMIN_PASSWORD=qwerty123qwerty123
      - INFLUXDB_ADMIN_ENABLED=true
      - INFLUXDB_HTTP_AUTH_ENABLED=true
      - INFLUXDB_USER=telegraf
      - INFLUXDB_USER_PASSWORD=qwerty123qwerty123
    ports:
      - '8086:8086'

  grafana:
    image: grafana/grafana-oss
    container_name: grafana-server
    restart: always
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./config/grafana/provisioning/:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-clock-panel
    ports:
      - '3000:3000'
    depends_on:
      - influxdb
